plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.waracle'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


    // DB related
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //liquibase
    implementation 'org.liquibase:liquibase-core:4.24.0'

    runtimeOnly 'org.postgresql:postgresql'
    //h2
    runtimeOnly 'com.h2database:h2'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //mapstruct
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'com.google.guava:guava:32.1.2-jre'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}
jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/CakeManagerApplication.class', '**/dto/**', '**/entity/**', '**/mapper/CakeMapperImpl.class'])
        }))
    }
}

sonar {
    properties {
//        property 'sonar.token', 'squ_a401a67fc13f304a3521a256e32f72defd4b6ee5' //NEEDED to produce sonarqube report
        property 'sonar.exclusions', '**/entity/**.java , **/model/**.java , **/dto/**.java'
        property 'sonar.coverage.exclusions', '**/CakeManagerApplication.java'
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.gradle.skipCompile', 'true'
    }
}
